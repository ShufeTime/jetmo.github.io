<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>centos下启动flask程序</title>
      <link href="/2018/08/29/cjlf3zehf0006e2tjz32fzwfp/"/>
      <url>/2018/08/29/cjlf3zehf0006e2tjz32fzwfp/</url>
      <content type="html"><![CDATA[<h4 id="centos系统下安装ngnix-负责转发"><a href="#centos系统下安装ngnix-负责转发" class="headerlink" title="centos系统下安装ngnix(负责转发)"></a>centos系统下安装ngnix(负责转发)</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> ngnix</span><br></pre></td></tr></table></figure><h4 id="配置ngnix"><a href="#配置ngnix" class="headerlink" title="配置ngnix"></a>配置ngnix</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">配置文件路径: <span class="regexp">/etc/</span>nginx<span class="regexp">/nginx.conf</span></span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果是多台服务器的话，则在此配置，并修改 location 节点下面的 proxy_pass </span></span><br><span class="line"><span class="attribute">upstream</span> flask &#123;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:5000</span>;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:5001</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="comment"># 监听80端口</span></span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span> default_server;</span><br><span class="line">        <span class="attribute">listen</span> [::]:<span class="number">80</span> default_server;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">root</span> /var/www/html;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">index</span> index.html index.htm index.nginx-debian.html;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">server_name</span> _;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">                <span class="comment"># 请求转发到gunicorn服务器</span></span><br><span class="line">                <span class="attribute">proxy_pass</span> http://127.0.0.1:5000;</span><br><span class="line">                <span class="comment"># 请求转发到多个gunicorn服务器</span></span><br><span class="line">                <span class="comment"># proxy_pass http://flask;</span></span><br><span class="line">                <span class="comment"># 设置请求头，并将头信息传递给服务器端 </span></span><br><span class="line">                <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">                <span class="comment"># 设置请求头，传递原始请求ip给 gunicorn 服务器</span></span><br><span class="line">                <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>启动ngnix服务器</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -c <span class="regexp">/etc/</span>nginx<span class="regexp">/nginx.conf</span></span><br></pre></td></tr></table></figure></li><li><p>python虚拟环境中安装 Gunicorn(wsgi协议的服务器)</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> Gunicorn</span><br></pre></td></tr></table></figure></li><li><p>启动Gunicorn</p></li></ol><ul><li>进入flask程序的启动文件所在文件夹.比如我的启动文件是manage.py<br>那么运行命令就是:<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">gunicorn</span> <span class="selector-tag">-w</span> 2 <span class="selector-tag">-b</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:5000</span> <span class="selector-tag">manage</span><span class="selector-pseudo">:app</span> <span class="selector-tag">-D</span> <span class="selector-tag">--reload</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">参数含义: -D表示后台运行. <span class="comment">--reload表示重启Gunicorn.已经运行的会重新启动不必要去kill进程.</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> flask </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flask </tag>
            
            <tag> ngnix </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>关于centos操作系统安装mysqlclient失败的解决方案</title>
      <link href="/2018/08/29/cjlf3zehh0008e2tjne25nf6x/"/>
      <url>/2018/08/29/cjlf3zehh0008e2tjne25nf6x/</url>
      <content type="html"><![CDATA[<h4 id="使用CentOS基本源安装Python2链接库"><a href="#使用CentOS基本源安装Python2链接库" class="headerlink" title="使用CentOS基本源安装Python2链接库"></a>使用CentOS基本源安装Python2链接库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install python-devel</span><br></pre></td></tr></table></figure><h4 id="使用CentOS-EPEL源安装Python3对应版本的链接库包"><a href="#使用CentOS-EPEL源安装Python3对应版本的链接库包" class="headerlink" title="使用CentOS EPEL源安装Python3对应版本的链接库包"></a>使用CentOS EPEL源安装Python3对应版本的链接库包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install python34-devel</span><br></pre></td></tr></table></figure><p>现在再安装<code>mysqlclient</code>就不会出现<code>编译中断。</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error: <span class="built_in">command</span> <span class="string">'gcc'</span> failed with <span class="built_in">exit</span> status 1</span><br></pre></td></tr></table></figure><p>这样的错误了. 安装:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mysqlclient</span><br></pre></td></tr></table></figure><h4 id="后续再安装Flask-MySQLdb-也不会报错啦"><a href="#后续再安装Flask-MySQLdb-也不会报错啦" class="headerlink" title="后续再安装Flask-MySQLdb 也不会报错啦."></a>后续再安装<code>Flask-MySQLdb</code> 也不会报错啦.</h4><p>安装:    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask-mysqldb</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> flask </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flask </tag>
            
            <tag> mysqlclient </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>关于centos操作系统安装MySQL-python失败的解决方案</title>
      <link href="/2018/08/29/cjlf3zehb0003e2tjk7c2a18y/"/>
      <url>/2018/08/29/cjlf3zehb0003e2tjk7c2a18y/</url>
      <content type="html"><![CDATA[<p>centos 使用yum 是找不到YSQL-python这个包的.所以需要下载安装包执行安装.</p><p>安装完依赖包后，开始安装MYSQL-python：</p><p>1、下载tar包：</p><p>执行：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="regexp">//</span>pypi.python.org<span class="regexp">/packages/</span>c8<span class="regexp">/8f/</span>aedf47a2e973a2d2f225ac98537472fc928ad61b9647fb370870404c594b<span class="regexp">/MySQL-python-1.2.3c1.tar.gz#md5=310dd856e439d070b59ece6dd7a0734d</span></span><br></pre></td></tr></table></figure><p>完成tar下载</p><p>2、解压执行：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-xzvf</span>  <span class="selector-tag">MySQL-python-1</span><span class="selector-class">.2</span><span class="selector-class">.3c1</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure><p>进入解压之后的文件夹根目录</p><p>3、编译(用python2 如果在python3虚拟环境请退出虚拟环境)</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup<span class="selector-class">.py</span> build</span><br></pre></td></tr></table></figure><p>4、安装(用python2 如果在python3虚拟环境请退出虚拟环境)</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup<span class="selector-class">.py</span> install</span><br></pre></td></tr></table></figure><p>经过上述步骤就完成了MySQL-python</p><hr><h4 id="如果还是不能解决问题可以尝试"><a href="#如果还是不能解决问题可以尝试" class="headerlink" title="如果还是不能解决问题可以尝试:"></a>如果还是不能解决问题可以尝试:</h4><p>原因是：MySQLdb不支持python3.x<br>用pymysql来代替MySQLdb<br>具体位置:<code>__init.py__</code>,<code>manage.py</code><br><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="title">pymysql</span>.install_as_MySQLdb()</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> flask </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> MYSQL-python </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>blog.md</title>
      <link href="/2018/08/24/cjlf3zeh50000e2tjigltfvx8/"/>
      <url>/2018/08/24/cjlf3zeh50000e2tjigltfvx8/</url>
      <content type="html"><![CDATA[<p>这是我的博客.</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>git基本命令</title>
      <link href="/2018/08/16/cjlf3zehj000be2tjfp14auwd/"/>
      <url>/2018/08/16/cjlf3zehj000be2tjfp14auwd/</url>
      <content type="html"><![CDATA[<ul><li>git init 初始化git,当前文件夹使用git管理</li><li>git add . 添加到暂存区</li><li>git commit -m “修改明细”  提交到本地仓库</li><li>git status 查看状态</li><li>git push 推送到远程服务器</li><li>git pull 从远程服务器拉取代码</li></ul><hr><ul><li>git log / reflog 查看日记</li><li>git reset HEAD^  回退到上一个版本或者指定版本</li><li>git reset –hard 589e122 回退到指定版本</li><li>git diff  对比</li><li>git rm 删除</li><li>git checkout 检查</li></ul><hr><blockquote><p>标签</p></blockquote><ul><li>git tag -a v1.0 -m “version 1.0” 给项目打标签</li><li>git push origin v1.0  push到远程服务器</li></ul><hr><ul><li>git brach 查看当前分支</li><li>git checkout -b dev  创建dev 分支</li><li>git push -u origin dev 把当前分支同步到服务器</li><li>git checkout master  切换分支</li><li>git merge dev 合并分支</li></ul>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/08/16/cjlf3zehg0007e2tju0xnuvrw/"/>
      <url>/2018/08/16/cjlf3zehg0007e2tju0xnuvrw/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>git基本命令</title>
      <link href="/2018/08/16/cjlf3zeh90002e2tjpl8348si/"/>
      <url>/2018/08/16/cjlf3zeh90002e2tjpl8348si/</url>
      <content type="html"><![CDATA[<ul><li>git init 初始化git,当前文件夹使用git管理</li><li>git add . 添加到暂存区</li><li>git commit -m “修改明细”  提交到本地仓库</li><li>git status 查看状态</li><li>git push 推送到远程服务器</li><li>git pull 从远程服务器拉取代码</li></ul><hr><ul><li>git log / reflog 查看日记</li><li>git reset HEAD^  回退到上一个版本或者指定版本</li><li>git reset –hard 589e122 回退到指定版本</li><li>git diff  对比</li><li>git rm 删除</li><li>git checkout 检查</li></ul><hr><blockquote><p>标签</p></blockquote><ul><li>git tag -a v1.0 -m “version 1.0” 给项目打标签</li><li>git push origin v1.0  push到远程服务器</li></ul><hr><ul><li>git brach 查看当前分支</li><li>git checkout -b dev  创建dev 分支</li><li>git push -u origin dev 把当前分支同步到服务器</li><li>git checkout master  切换分支</li><li>git merge dev 合并分支</li></ul>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
